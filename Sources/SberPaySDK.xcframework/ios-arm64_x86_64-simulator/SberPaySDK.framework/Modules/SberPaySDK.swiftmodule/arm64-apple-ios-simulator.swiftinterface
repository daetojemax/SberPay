// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SberPaySDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import SberPaySDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@objc(SBPResult) public enum Result : Swift.Int {
  case unknown
  case invalidParams
  case launchError
  case success
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc(SBPSberPay) final public class SberPay : ObjectiveC.NSObject {
  @objc(payWithRequest:completionHandler:) public static func pay(with request: SberPaySDK.PaymentRequest, completionHandler: ((SberPaySDK.Result) -> Swift.Void)? = nil)
  @objc(payWithInvoiceId:) public static func pay(with request: SberPaySDK.PaymentRequest)
  @objc public static var isSberbankAppInstalled: Swift.Bool {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
@objc(SBPPaymentRequest) final public class PaymentRequest : ObjectiveC.NSObject {
  @objc public init(invoiceId: Swift.String, redirectUri: Swift.String? = nil)
  @objc convenience public init(invoiceId: Swift.String)
  @objc deinit
}
public typealias TapAction = (() -> Swift.Void)
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(SBPPayButton) @objcMembers @IBDesignable @_Concurrency.MainActor(unsafe) final public class PayButton : UIKit.UIView {
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) final public var shadowOffset: CoreFoundation.CGSize {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) final public var shadowOpacity: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) final public var shadowRadius: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) final public var cornerRadius: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) final public var tapAction: SberPaySDK.TapAction?
  @objc @_Concurrency.MainActor(unsafe) final public var isEnabled: Swift.Bool {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc convenience dynamic public init()
  @_Concurrency.MainActor(unsafe) @objc override final public func prepareForInterfaceBuilder()
  @_Concurrency.MainActor(unsafe) @objc override final public func layoutSubviews()
  @objc deinit
}
extension SberPaySDK.Result : Swift.Equatable {}
extension SberPaySDK.Result : Swift.Hashable {}
extension SberPaySDK.Result : Swift.RawRepresentable {}
